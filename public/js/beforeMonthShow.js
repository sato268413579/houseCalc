/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/beforeMonthShow.js":
/*!*****************************************!*\
  !*** ./resources/js/beforeMonthShow.js ***!
  \*****************************************/
/***/ (() => {

eval("window.btnCreateShow = function () {\n  var type = document.getElementsByName('gender');\n\n  for (i = 0; i < type.length; i++) {\n    if (type[i].checked) {\n      type = type[i].id;\n    }\n  }\n\n  $.ajax({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    url: '/getBeforeData',\n    type: 'POST',\n    dataType: 'JSON',\n    data: JSON.stringify({\n      'toMonth': document.getElementById('toMonth').value,\n      'type': type\n    }),\n    success: function success(data) {\n      var elementCheck = document.getElementById('msg');\n\n      if (elementCheck != null) {\n        elementCheck.remove();\n      }\n\n      var elementCheck = document.getElementById('tblMonth');\n\n      if (elementCheck != null) {\n        elementCheck.remove();\n      }\n\n      if (data['data'] == null) {\n        var label = document.createElement('label');\n        label.id = 'msg';\n        label.innerHTML = 'データがありません';\n        label.style = 'color:red;';\n        var parent = document.getElementById('errMsg');\n        parent.appendChild(label);\n      } else {\n        var table = document.createElement('table');\n\n        switch (type) {\n          case 'registerDay':\n            table.id = 'tblMonth';\n            table.className = 'table';\n            oldDay = '';\n\n            for (i = 0; i < data['data'].length; i++) {\n              row = table.insertRow();\n              row.id = 'registerdRowId' + i;\n\n              if (oldDay == data['data'][i]['day']) {\n                row.insertCell().appendChild(document.createTextNode('')).id = 'aaaaaaa' + i;\n                row.insertCell().appendChild(document.createTextNode('金額'));\n                row.insertCell().appendChild(document.createTextNode(data['data'][i]['pay']));\n              } else {\n                row.insertCell().appendChild(document.createTextNode(data['data'][i]['day']));\n                row.insertCell().appendChild(document.createTextNode('金額'));\n                row.insertCell().appendChild(document.createTextNode(data['data'][i]['pay']));\n              }\n\n              if (data['data'][i]['type'] === 1) {\n                row.insertCell().appendChild(document.createTextNode('食費'));\n              } else {\n                row.insertCell().appendChild(document.createTextNode('個人出費'));\n              }\n\n              row.insertCell().appendChild(document.createTextNode(data['data'][i]['othercomment']));\n              var fileCrear = document.createElement('i');\n              fileCrear.onclick = new Function(\"dayDelete('\" + data['data'][i]['day'] + '|' + data['data'][i]['oiban'] + \"', 'registerdRowId\" + i + \"')\");\n              fileCrear.className = 'fas fa-times-circle text-danger';\n              row.insertCell().appendChild(fileCrear);\n\n              if (data['data'][i]['image']) {\n                var img = document.createElement('img');\n                img.src = '/img/public/' + data['data'][i]['image'];\n                img.width = 150;\n                row.insertCell().appendChild(img);\n              }\n\n              oldDay = data['data'][i]['day'];\n            }\n\n            document.getElementById('tableShowData').appendChild(table);\n            break;\n\n          case 'sum':\n            createSumData(data);\n            break;\n        }\n      }\n    },\n    error: function error(jqXHR, textStatus, errorThrown) {\n      alert('データチェックに失敗');\n      console.log(jqXHR);\n      console.log(textStatus);\n      console.log(errorThrown);\n    }\n  });\n}; //指定月の合計金額を作成\n\n\nfunction createSumData(data) {\n  var _data$data$othersum;\n\n  var table = document.createElement('table');\n  table.id = 'tblMonth';\n  table.className = 'table';\n  row = table.insertRow();\n  row.insertCell().appendChild(document.createTextNode('家賃'));\n  row.insertCell().appendChild(document.createTextNode(data['data']['yatin']));\n  row = table.insertRow();\n  row.insertCell().appendChild(document.createTextNode('食費'));\n  row.insertCell().appendChild(document.createTextNode(data['data']['eat']));\n  row = table.insertRow();\n  row.insertCell().appendChild(document.createTextNode('ガス代'));\n  row.insertCell().appendChild(document.createTextNode(data['data']['gasu']));\n  row = table.insertRow();\n  row.insertCell().appendChild(document.createTextNode('電気代'));\n  row.insertCell().appendChild(document.createTextNode(data['data']['denki']));\n  row = table.insertRow();\n  row.insertCell().appendChild(document.createTextNode('水道代'));\n  row.insertCell().appendChild(document.createTextNode(data['data']['suidou']));\n  row = table.insertRow();\n  row.insertCell().appendChild(document.createTextNode('通信費'));\n  row.insertCell().appendChild(document.createTextNode(data['data']['tuushin']));\n  row = table.insertRow();\n  row.insertCell().appendChild(document.createTextNode('ローン'));\n  row.insertCell().appendChild(document.createTextNode(data['data']['loan']));\n  row = table.insertRow();\n  row.insertCell().appendChild(document.createTextNode('個人出費'));\n  row.insertCell().appendChild(document.createTextNode((_data$data$othersum = data['data']['othersum']) !== null && _data$data$othersum !== void 0 ? _data$data$othersum : 0));\n  row = table.insertRow();\n  row.insertCell().appendChild(document.createTextNode('備考'));\n  row.insertCell().appendChild(document.createTextNode(data['data']['comment']));\n  sum = data['data']['yatin'] + data['data']['eat'] + data['data']['gasu'] + data['data']['denki'] + data['data']['suidou'] + data['data']['tuushin'] + data['data']['loan'];\n  row = table.insertRow();\n  row.insertCell().appendChild(document.createTextNode('合計'));\n  row.insertCell().appendChild(document.createTextNode(sum));\n  document.getElementById('tableShowData').appendChild(table);\n}\n\nwindow.dayDelete = function (dayPipeOiban, rowId) {\n  $.ajax({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    url: '/dayDelete',\n    dataType: 'JSON',\n    type: 'POST',\n    data: JSON.stringify({\n      'dayPipeOiban': dayPipeOiban\n    }),\n    success: function success(data) {\n      $('#' + rowId).remove();\n    },\n    error: function error(jqXHR, textStatus, errorThrown) {\n      alert('削除に失敗しました');\n      console.log(jqXHR);\n      console.log(textStatus);\n      console.log(errorThrown);\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/beforeMonthShow.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/beforeMonthShow.js"]();
/******/ 	
/******/ })()
;